{"version":3,"file":"static/js/264.dc6daa28.chunk.js","mappings":"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","sources":["scenes/CommitteeScenes/AddCommitteeMember/AddCommitteeMember.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  useTheme,\r\n  Card,\r\n  CardContent,\r\n  useMediaQuery,\r\n  TextField,\r\n  Button,\r\n  CardActions,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { Formik } from \"formik\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport Header from \"components/Header\";\r\nimport { useAddMemberMutation } from \"state/adminApiSlice\";\r\nimport { committeeMemberSchema } from \"utils/validationSchemas\";\r\nimport { committeeMemberInitialValues } from \"utils/initialValues\";\r\n\r\nconst AddCommitteeMember = () => {\r\n  const theme = useTheme();\r\n  const isNonMobile = useMediaQuery(\"(min-width: 600px)\");\r\n  const user = useSelector((state) => state.global.user);\r\n\r\n  // States\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n  const handleMouseDownPassword = () => setShowPassword(!showPassword);\r\n  const [addMember, { isLoading }] = useAddMemberMutation();\r\n\r\n  //submit handler\r\n  const handleFormSubmit = async (values, onSubmitProps) => {\r\n    try {\r\n      const committeeName = user.committeeName;\r\n      const committeeId = user.committeeId;\r\n      const Member = {\r\n        ...values,\r\n        committeeName,\r\n        committeeId,\r\n        role: \"member\",\r\n      };\r\n      const res = await addMember(Member).unwrap();\r\n      if (res) {\r\n        onSubmitProps.resetForm();\r\n        toast.success(\"Member Added Successfully\");\r\n      }\r\n    } catch (error) {\r\n      toast.error(error?.data?.msg || \"Server Error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        m={isNonMobile ? \"1rem 2.5rem\" : \"0.8rem\"}\r\n        position='relative'\r\n        component={motion.div}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        transition={{ delay: 0.1, ease: \"easeInOut\" }}\r\n      >\r\n        <Header title='ADD Member' subtitle='Add New Member Details.' />\r\n\r\n        <Formik\r\n          onSubmit={handleFormSubmit}\r\n          initialValues={committeeMemberInitialValues}\r\n          validationSchema={committeeMemberSchema}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleBlur,\r\n            handleChange,\r\n            handleSubmit,\r\n          }) => (\r\n            <form autoComplete='off' onSubmit={handleSubmit}>\r\n              <Box>\r\n                <Card\r\n                  sx={{\r\n                    backgroundImage: \"none\",\r\n                    backgroundColor: theme.palette.background.alt,\r\n                    marginTop: \"20px\",\r\n                  }}\r\n                >\r\n                  <CardContent\r\n                    sx={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                  >\r\n                    <Box\r\n                      component={motion.div}\r\n                      initial={{ y: 20, opacity: 0 }}\r\n                      animate={{ y: 0, opacity: 1 }}\r\n                      transition={{ delay: 0.2 }}\r\n                      exit={{ y: 20, opacity: 0 }}\r\n                      sx={{\r\n                        width: \"90%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\",\r\n                        flexWrap: \"Wrap\",\r\n                      }}\r\n                    >\r\n                      <TextField\r\n                        sx={{ width: \"18rem\" }}\r\n                        id='memberName'\r\n                        name='memberName'\r\n                        autoComplete='off'\r\n                        color='secondary'\r\n                        label='Member Name'\r\n                        value={values.memberName}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        helperText={touched.memberName ? errors.memberName : \"\"}\r\n                        error={touched.memberName && Boolean(errors.memberName)}\r\n                        margin='normal'\r\n                        variant='outlined'\r\n                      />\r\n                      <TextField\r\n                        sx={{ width: \"18rem\" }}\r\n                        notched='true'\r\n                        color='secondary'\r\n                        id='memberEmail'\r\n                        name='memberEmail'\r\n                        autoComplete='off'\r\n                        label='Member Email'\r\n                        value={values.memberEmail}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        helperText={\r\n                          touched.memberEmail ? errors.memberEmail : \"\"\r\n                        }\r\n                        error={\r\n                          touched.memberEmail && Boolean(errors.memberEmail)\r\n                        }\r\n                        margin='normal'\r\n                        variant='outlined'\r\n                      />\r\n                    </Box>\r\n                    <Box\r\n                      component={motion.div}\r\n                      initial={{ y: 20, opacity: 0 }}\r\n                      animate={{ y: 0, opacity: 1 }}\r\n                      transition={{ delay: 0.4 }}\r\n                      exit={{ y: 20, opacity: 0 }}\r\n                      sx={{\r\n                        width: \"90%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\",\r\n                        flexWrap: \"Wrap\",\r\n                      }}\r\n                    >\r\n                      <TextField\r\n                        sx={{ width: \"18rem\" }}\r\n                        notched='true'\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        autoComplete='off'\r\n                        color='secondary'\r\n                        id='memberPassword'\r\n                        name='memberPassword'\r\n                        label='Member Password'\r\n                        value={values.memberPassword}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        helperText={\r\n                          touched.memberPassword ? errors.memberPassword : \"\"\r\n                        }\r\n                        error={\r\n                          touched.memberPassword &&\r\n                          Boolean(errors.memberPassword)\r\n                        }\r\n                        margin='normal'\r\n                        variant='outlined'\r\n                        InputProps={{\r\n                          // <-- This is where the toggle button is added.\r\n                          endAdornment: (\r\n                            <InputAdornment position='end'>\r\n                              <IconButton\r\n                                aria-label='toggle password visibility'\r\n                                onClick={handleClickShowPassword}\r\n                                onMouseDown={handleMouseDownPassword}\r\n                              >\r\n                                {showPassword ? (\r\n                                  <Visibility />\r\n                                ) : (\r\n                                  <VisibilityOff />\r\n                                )}\r\n                              </IconButton>\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n                      <TextField\r\n                        sx={{ width: \"18rem\" }}\r\n                        id='mobile'\r\n                        name='mobile'\r\n                        autoComplete='off'\r\n                        color='secondary'\r\n                        label='Mobile Number'\r\n                        value={values.mobile}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        helperText={touched.mobile ? errors.mobile : \"\"}\r\n                        error={touched.mobile && Boolean(errors.mobile)}\r\n                        margin='normal'\r\n                        variant='outlined'\r\n                      />\r\n                    </Box>\r\n                  </CardContent>\r\n                  <CardActions\r\n                    display='flex'\r\n                    sx={{\r\n                      marginBottom: \"1rem\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      name='add_member'\r\n                      variant='contained'\r\n                      disabled={isLoading}\r\n                      type='submit'\r\n                      sx={{\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                      size='large'\r\n                      color='secondary'\r\n                    >\r\n                      Add Member\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Box>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddCommitteeMember;\r\n"],"names":["AddCommitteeMember","theme","useTheme","isNonMobile","useMediaQuery","user","useSelector","state","global","showPassword","setShowPassword","useState","handleClickShowPassword","handleMouseDownPassword","addMember","isLoading","useAddMemberMutation","_jsx","Box","children","_jsxs","m","position","component","motion","div","initial","opacity","animate","transition","delay","ease","Header","title","subtitle","Formik","onSubmit","async","values","onSubmitProps","committeeName","committeeId","Member","role","unwrap","resetForm","toast","success","error","_error$data","data","msg","initialValues","committeeMemberInitialValues","validationSchema","committeeMemberSchema","_ref","errors","touched","handleBlur","handleChange","handleSubmit","autoComplete","Card","sx","backgroundImage","backgroundColor","palette","background","alt","marginTop","CardContent","display","justifyContent","flexWrap","y","exit","width","TextField","id","name","color","label","value","memberName","onChange","onBlur","helperText","Boolean","margin","variant","notched","memberEmail","type","memberPassword","InputProps","endAdornment","InputAdornment","IconButton","onClick","onMouseDown","Visibility","VisibilityOff","mobile","CardActions","marginBottom","Button","disabled","fontWeight","size"],"sourceRoot":""}