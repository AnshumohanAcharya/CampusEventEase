{"version":3,"file":"static/js/347.887226ac.chunk.js","mappings":"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","sources":["scenes/ChangePassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  Button,\r\n  CardActions,\r\n  useMediaQuery,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { Formik } from \"formik\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useTheme } from \"@emotion/react\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { useChangePasswordMutation } from \"state/adminApiSlice\";\r\nimport Header from \"components/Header\";\r\nimport { changePasswordSchema } from \"utils/validationSchemas\";\r\nimport { changePasswordInitialValues } from \"utils/initialValues\";\r\n\r\nconst inputs = [\r\n  { id: 1, label: \"Current Password\", name: \"currentPassword\" },\r\n  { id: 2, label: \"New Password\", name: \"newPassword\" },\r\n  { id: 3, label: \"Confirm New Password\", name: \"cNewPassword\" },\r\n];\r\n\r\nconst ConfirmPassword = () => {\r\n  //hooks\r\n  const isNonMobile = useMediaQuery(\"(min-width: 600px)\");\r\n  const theme = useTheme();\r\n  const user = useSelector((state) => state.global.user);\r\n\r\n  //state\r\n  const [showPassword, setShowPassword] = useState([false, false, false]);\r\n\r\n  //rtk query\r\n  const [changePassword] = useChangePasswordMutation();\r\n\r\n  //handlers\r\n  const handleClickShowPassword = (index) => {\r\n    setShowPassword((prevState) => {\r\n      const updatedState = [...prevState];\r\n      updatedState[index] = !updatedState[index];\r\n      return updatedState;\r\n    });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleFormSubmit = async (values, onSubmitProps) => {\r\n    try {\r\n      values.userId = user._id;\r\n      const res = await changePassword(values).unwrap();\r\n      if (res) {\r\n        onSubmitProps.resetForm();\r\n        toast.success(\"Password Changed Successfully\");\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.data.msg || \"Server Error!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        m={isNonMobile ? \"1rem 2.5rem\" : \"0.8rem\"}\r\n        position='relative'\r\n        component={motion.div}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        transition={{ delay: 0.1, ease: \"easeInOut\" }}\r\n      >\r\n        <Header title='CHANGE PASSWORD' subtitle='Enter Details' />\r\n        <Formik\r\n          onSubmit={handleFormSubmit}\r\n          initialValues={changePasswordInitialValues}\r\n          validationSchema={changePasswordSchema}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleBlur,\r\n            handleChange,\r\n            handleSubmit,\r\n          }) => (\r\n            <form onSubmit={handleSubmit}>\r\n              <Box>\r\n                <Card\r\n                  sx={{\r\n                    backgroundImage: \"none\",\r\n                    backgroundColor: theme.palette.background.alt,\r\n                    marginTop: \"20px\",\r\n                  }}\r\n                >\r\n                  <CardContent mt='20px'>\r\n                    <Box\r\n                      sx={{\r\n                        width: isNonMobile ? \"60%\" : \"90%\",\r\n                        margin: \"auto\",\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      {inputs.map((input, index) => (\r\n                        <TextField\r\n                          component={motion.div}\r\n                          initial={{ y: 20, opacity: 0 }}\r\n                          animate={{ y: 0, opacity: 1 }}\r\n                          transition={{\r\n                            delay: 0.15 * input.id,\r\n                          }}\r\n                          exit={{ y: 20, opacity: 0 }}\r\n                          key={input.id}\r\n                          id={input.name}\r\n                          type={showPassword[index] ? \"text\" : \"password\"}\r\n                          autoComplete='off'\r\n                          color='secondary'\r\n                          label={input.label}\r\n                          value={values[input.name]}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          helperText={\r\n                            touched[input.name] ? errors[input.name] : \"\"\r\n                          }\r\n                          error={\r\n                            touched[input.name] && Boolean(errors[input.name])\r\n                          }\r\n                          margin='dense'\r\n                          variant='outlined'\r\n                          fullWidth\r\n                          InputProps={{\r\n                            // <-- This is where the toggle button is added.\r\n                            endAdornment: (\r\n                              <InputAdornment position='end'>\r\n                                <IconButton\r\n                                  aria-label='toggle password visibility'\r\n                                  onClick={() => handleClickShowPassword(index)}\r\n                                  onMouseDown={handleMouseDownPassword}\r\n                                >\r\n                                  {showPassword[index] ? (\r\n                                    <Visibility />\r\n                                  ) : (\r\n                                    <VisibilityOff />\r\n                                  )}\r\n                                </IconButton>\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      ))}\r\n                    </Box>\r\n                  </CardContent>\r\n                  <CardActions\r\n                    display='flex'\r\n                    sx={{\r\n                      marginBottom: \"1rem\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      name='change_password'\r\n                      variant='contained'\r\n                      type='submit'\r\n                      sx={{\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                      size='large'\r\n                      color='secondary'\r\n                    >\r\n                      Change Password\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Box>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ConfirmPassword;\r\n"],"names":["inputs","id","label","name","ConfirmPassword","isNonMobile","useMediaQuery","theme","useTheme","user","useSelector","state","global","showPassword","setShowPassword","useState","changePassword","useChangePasswordMutation","handleMouseDownPassword","event","preventDefault","_jsx","Box","children","_jsxs","m","position","component","motion","div","initial","opacity","animate","transition","delay","ease","Header","title","subtitle","Formik","onSubmit","async","values","onSubmitProps","userId","_id","unwrap","resetForm","toast","success","error","data","msg","initialValues","changePasswordInitialValues","validationSchema","changePasswordSchema","_ref","errors","touched","handleBlur","handleChange","handleSubmit","Card","sx","backgroundImage","backgroundColor","palette","background","alt","marginTop","CardContent","mt","width","margin","display","flexDirection","justifyContent","alignItems","map","input","index","TextField","y","exit","type","autoComplete","color","value","onChange","onBlur","helperText","Boolean","variant","fullWidth","InputProps","endAdornment","InputAdornment","IconButton","onClick","prevState","updatedState","handleClickShowPassword","onMouseDown","Visibility","VisibilityOff","CardActions","marginBottom","Button","fontWeight","size"],"sourceRoot":""}